% Auto-generated by stereoCalibrator app on 24-Feb-2022
%-------------------------------------------------------
function stereoParams = myStereoCameraCalibrator(folder1,folder2,square_size)
% square_size in mm

% Define images to process
d1 = dir(fullfile(folder1));
imageFileNames1 = cellfun(@(x) fullfile(folder1, x), {d1(~[d1.isdir] & ~endsWith({d1.name}, '.db')).name},'Uni',0);
d2 = dir(fullfile(folder2));
imageFileNames2 = cellfun(@(x) fullfile(folder2, x), {d2(~[d2.isdir] & ~endsWith({d1.name}, '.db')).name},'Uni',0);




% Detect checkerboards in images. Returns vertex image coordinates in pixels, in
% (npoints x 2xy x nimages x 2cameras) matrix
[imagePoints, boardSize] = detectCheckerboardPoints(imageFileNames1, imageFileNames2);

% Generate world coordinates of the checkerboard keypoints
worldPoints = generateCheckerboardPoints(boardSize, square_size);

% Read one of the images from the first stereo pair
I1 = imread(imageFileNames1{1});
[mrows, ncols, ~] = size(I1);

% Calibrate the camera
[stereoParams, pairsUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', false, 'EstimateTangentialDistortion', false, ...
    'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'millimeters', ...
    'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', [], ...
    'ImageSize', [mrows, ncols]);

% View reprojection errors
h1=figure; showReprojectionErrors(stereoParams);

% Visualize pattern locations
h2=figure; showExtrinsics(stereoParams, 'CameraCentric');

% Display parameter estimation errors
displayErrors(estimationErrors, stereoParams);


% See additional examples of how to use the calibration data.  At the prompt type:
% showdemo('StereoCalibrationAndSceneReconstructionExample')
% showdemo('DepthEstimationFromStereoVideoExample')
